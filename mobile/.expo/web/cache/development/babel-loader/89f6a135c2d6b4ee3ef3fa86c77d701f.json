{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"V:\\\\Programacao\\\\nlw_booster\\\\aulas\\\\mobile\\\\src\\\\pages\\\\Points\\\\index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Constants from 'expo-constants';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { SvgUri } from 'react-native-svg';\nimport * as Location from 'expo-location';\nimport api from \"../../services/api\";\n\nvar Points = function Points() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      points = _useState4[0],\n      setPoints = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedItems = _useState6[0],\n      setSelectedItems = _useState6[1];\n\n  var _useState7 = useState([0, 0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      initialPosition = _useState8[0],\n      setInitialPosition = _useState8[1];\n\n  var route = useRoute();\n  var routeParams = route.params;\n  useEffect(function () {\n    api.get('items').then(function (response) {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(function () {\n    function loadPosition() {\n      var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status != 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert('Oooops', 'Precisamos de sua permissão para obter a localização');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              setInitialPosition([latitude, longitude]);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPosition();\n  }, []);\n  useEffect(function () {\n    api.get('points', {\n      params: {\n        city: routeParams.city,\n        uf: routeParams.uf,\n        items: selectedItems\n      }\n    }).then(function (response) {\n      setPoints(response.data);\n    });\n  }, [selectedItems]);\n\n  function handleNavigateBack() {\n    navigation.goBack();\n  }\n\n  function handleNavigatetoDetail(id) {\n    navigation.navigate('Detail', {\n      point_id: id\n    });\n  }\n\n  function handleSelectItem(id) {\n    var alreadySelected = selectedItems.findIndex(function (item) {\n      return item === id;\n    });\n\n    if (alreadySelected >= 0) {\n      var filteredItems = selectedItems.filter(function (item) {\n        return item !== id;\n      });\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([].concat(_toConsumableArray(selectedItems), [id]));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleNavigateBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 20,\n    color: \"#34cb79\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Bem vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Encontre no mapa um ponto de coleta.\"), React.createElement(View, {\n    style: styles.mapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, initialPosition[0] !== 0 && React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: initialPosition[0],\n      longitude: initialPosition[1],\n      latitudeDelta: 0.014,\n      longitudeDelta: 0.014\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, points.map(function (point) {\n    return React.createElement(Marker, {\n      key: String(point.id),\n      style: styles.mapMarker,\n      onPress: function onPress() {\n        return handleNavigatetoDetail(point.id);\n      },\n      coordinate: {\n        latitude: point.latitude,\n        longitude: point.longitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, React.createElement(View, {\n      style: styles.mapMarkerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, React.createElement(Image, {\n      style: styles.mapMarkerImage,\n      source: {\n        uri: point.image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }), React.createElement(Text, {\n      style: styles.mapMarkerTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, point.nome)));\n  })))), React.createElement(View, {\n    style: styles.itemsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingHorizontal: 7\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.6,\n      key: String(item.id),\n      style: [styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}],\n      onPress: function onPress() {\n        return handleSelectItem(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, React.createElement(SvgUri, {\n      width: 42,\n      height: 42,\n      uri: item.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: styles.itemTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, item.title));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'Ubuntu_700Bold',\n    marginTop: 24\n  },\n  description: {\n    color: '#6C6C80',\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: 'Roboto_400Regular'\n  },\n  mapContainer: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 16\n  },\n  map: {\n    width: '100%',\n    height: '100%'\n  },\n  mapMarker: {\n    width: 90,\n    height: 80\n  },\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: '#34CB79',\n    flexDirection: 'column',\n    borderRadius: 8,\n    overflow: 'hidden',\n    alignItems: 'center'\n  },\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: 'cover'\n  },\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: 'Roboto_400Regular',\n    color: '#FFF',\n    fontSize: 13,\n    lineHeight: 23\n  },\n  itemsContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 32\n  },\n  item: {\n    backgroundColor: '#fff',\n    borderWidth: 2,\n    borderColor: '#eee',\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    textAlign: 'center'\n  },\n  selectedItem: {\n    borderColor: '#34CB79',\n    borderWidth: 2\n  },\n  itemTitle: {\n    fontFamily: 'Roboto_400Regular',\n    textAlign: 'center',\n    fontSize: 13\n  }\n});\nexport default Points;","map":{"version":3,"sources":["V:/Programacao/nlw_booster/aulas/mobile/src/pages/Points/index.tsx"],"names":["React","useState","useEffect","Constants","Feather","Icon","useNavigation","useRoute","MapView","Marker","SvgUri","Location","api","Points","navigation","items","setItems","points","setPoints","selectedItems","setSelectedItems","initialPosition","setInitialPosition","route","routeParams","params","get","then","response","data","loadPosition","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","location","coords","latitude","longitude","city","uf","handleNavigateBack","goBack","handleNavigatetoDetail","id","navigate","point_id","handleSelectItem","alreadySelected","findIndex","item","filteredItems","filter","styles","container","title","description","mapContainer","map","latitudeDelta","longitudeDelta","point","String","mapMarker","mapMarkerContainer","mapMarkerImage","uri","image","mapMarkerTitle","nome","itemsContainer","paddingHorizontal","includes","selectedItem","image_url","itemTitle","StyleSheet","create","flex","paddingTop","statusBarHeight","fontSize","fontFamily","marginTop","color","width","borderRadius","overflow","height","backgroundColor","flexDirection","alignItems","resizeMode","lineHeight","marginBottom","borderWidth","borderColor","paddingBottom","marginRight","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Constants from 'expo-constants'\r\nimport { Feather as Icon } from '@expo/vector-icons'\r\nimport { useNavigation, useRoute } from '@react-navigation/native'\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, Alert } from 'react-native'\r\nimport MapView, { Marker } from 'react-native-maps'\r\nimport { SvgUri } from 'react-native-svg'\r\nimport * as Location from 'expo-location'\r\nimport api from '../../services/api'\r\n\r\nconst Points = () => {\r\n\r\n    interface Item {\r\n        id: number\r\n        title: string\r\n        image_url: string\r\n    }\r\n\r\n    interface Point {\r\n        id: number\r\n        nome: string\r\n        image: string\r\n        latitude: number\r\n        longitude: number\r\n    }\r\n\r\n    interface Params {\r\n        uf: string\r\n        city: string\r\n    }\r\n\r\n    const navigation = useNavigation()\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [points, setPoints] = useState<Point[]>([])\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([])\r\n\r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0])\r\n\r\n    const route = useRoute()\r\n\r\n    const routeParams = route.params as Params\r\n\r\n    useEffect(() => {\r\n        api.get('items').then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function loadPosition() {\r\n            const { status } = await Location.requestPermissionsAsync()\r\n\r\n            if (status != 'granted') {\r\n                Alert.alert('Oooops', 'Precisamos de sua permissão para obter a localização')\r\n                return\r\n            }\r\n\r\n            const location = await Location.getCurrentPositionAsync()\r\n\r\n            const { latitude, longitude } = location.coords\r\n\r\n            setInitialPosition([\r\n                latitude,\r\n                longitude\r\n            ])\r\n        }\r\n\r\n        loadPosition()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        api.get('points', {\r\n            params: {\r\n                city: routeParams.city,\r\n                uf: routeParams.uf,\r\n                items: selectedItems\r\n            }\r\n        }).then(response => {\r\n            setPoints(response.data)\r\n        })\r\n    }, [selectedItems])\r\n    function handleNavigateBack() {\r\n        navigation.goBack()\r\n    }\r\n\r\n    function handleNavigatetoDetail(id: number) {\r\n        navigation.navigate('Detail', { point_id: id })\r\n    }\r\n\r\n    function handleSelectItem(id: number) {\r\n\r\n        const alreadySelected = selectedItems.findIndex(item => item === id)\r\n\r\n        if (alreadySelected >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== id)\r\n\r\n            setSelectedItems(filteredItems)\r\n        } else {\r\n            setSelectedItems([...selectedItems, id])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.container}>\r\n                <TouchableOpacity onPress={handleNavigateBack}>\r\n                    <Icon name=\"arrow-left\" size={20} color=\"#34cb79\" />\r\n                </TouchableOpacity>\r\n\r\n                <Text style={styles.title}>Bem vindo!</Text>\r\n                <Text style={styles.description}>Encontre no mapa um ponto de coleta.</Text>\r\n\r\n                <View style={styles.mapContainer}>\r\n                    {initialPosition[0] !== 0 && (\r\n                        <MapView style={styles.map}\r\n                            initialRegion={{\r\n                                latitude: initialPosition[0],\r\n                                longitude: initialPosition[1],\r\n                                latitudeDelta: 0.014,\r\n                                longitudeDelta: 0.014\r\n                            }}\r\n                        >\r\n                            {points.map(point => (\r\n                                <Marker \r\n                                    key ={String(point.id)}\r\n                                    style={styles.mapMarker}\r\n                                    onPress={() => handleNavigatetoDetail(point.id)}\r\n                                    coordinate={{\r\n                                        latitude: point.latitude,\r\n                                        longitude: point.longitude,\r\n                                    }}\r\n                                >\r\n                                    <View style={styles.mapMarkerContainer}>\r\n                                        <Image style={styles.mapMarkerImage} source={{ uri: point.image }} />\r\n                                        <Text style={styles.mapMarkerTitle}>{point.nome}</Text>\r\n                                    </View>\r\n                                </Marker>\r\n                            ))}\r\n                        </MapView>\r\n                    )}\r\n                </View>\r\n            </View>\r\n            <View style={styles.itemsContainer}>\r\n                <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={{ paddingHorizontal: 7 }} >\r\n                    {items.map(item => (\r\n                        <TouchableOpacity\r\n                            activeOpacity={0.6}\r\n                            key={String(item.id)}\r\n                            style={[styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}]}\r\n                            onPress={() => handleSelectItem(item.id)}>\r\n                            <SvgUri width={42} height={42} uri={item.image_url} />\r\n                            <Text style={styles.itemTitle}>{item.title}</Text>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </ScrollView>\r\n            </View>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingHorizontal: 32,\r\n        paddingTop: 20 + Constants.statusBarHeight,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 20,\r\n        fontFamily: 'Ubuntu_700Bold',\r\n        marginTop: 24,\r\n    },\r\n\r\n    description: {\r\n        color: '#6C6C80',\r\n        fontSize: 16,\r\n        marginTop: 4,\r\n        fontFamily: 'Roboto_400Regular',\r\n    },\r\n\r\n    mapContainer: {\r\n        flex: 1,\r\n        width: '100%',\r\n        borderRadius: 10,\r\n        overflow: 'hidden',\r\n        marginTop: 16,\r\n    },\r\n\r\n    map: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n\r\n    mapMarker: {\r\n        width: 90,\r\n        height: 80,\r\n    },\r\n\r\n    mapMarkerContainer: {\r\n        width: 90,\r\n        height: 70,\r\n        backgroundColor: '#34CB79',\r\n        flexDirection: 'column',\r\n        borderRadius: 8,\r\n        overflow: 'hidden',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    mapMarkerImage: {\r\n        width: 90,\r\n        height: 45,\r\n        resizeMode: 'cover',\r\n    },\r\n\r\n    mapMarkerTitle: {\r\n        flex: 1,\r\n        fontFamily: 'Roboto_400Regular',\r\n        color: '#FFF',\r\n        fontSize: 13,\r\n        lineHeight: 23,\r\n    },\r\n\r\n    itemsContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 16,\r\n        marginBottom: 32,\r\n    },\r\n\r\n    item: {\r\n        backgroundColor: '#fff',\r\n        borderWidth: 2,\r\n        borderColor: '#eee',\r\n        height: 120,\r\n        width: 120,\r\n        borderRadius: 8,\r\n        paddingHorizontal: 16,\r\n        paddingTop: 20,\r\n        paddingBottom: 16,\r\n        marginRight: 8,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n\r\n        textAlign: 'center',\r\n    },\r\n\r\n    selectedItem: {\r\n        borderColor: '#34CB79',\r\n        borderWidth: 2,\r\n    },\r\n\r\n    itemTitle: {\r\n        fontFamily: 'Roboto_400Regular',\r\n        textAlign: 'center',\r\n        fontSize: 13,\r\n    },\r\n});\r\n\r\nexport default Points"]},"metadata":{},"sourceType":"module"}